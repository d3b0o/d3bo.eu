<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UAF on d3bo</title><link>/tags/uaf/</link><description>Recent content in UAF on d3bo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2025 Hyas</copyright><lastBuildDate>Sun, 03 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/uaf/index.xml" rel="self" type="application/rss+xml"/><item><title>Unsubscriptions Are Free</title><link>/ctf/pico/unsuscriptions_are_free/</link><pubDate>Sun, 03 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/unsuscriptions_are_free/</guid><description>#include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;fcntl.h&amp;gt; #include &amp;lt;ctype.h&amp;gt; #define FLAG_BUFFER 200 #define LINE_BUFFER_SIZE 20 typedef struct { uintptr_t (*whatToDo)(); char *username; } cmd; char choice; cmd *user; void hahaexploitgobrrr(){ char buf[FLAG_BUFFER]; FILE *f = fopen(&amp;#34;flag.</description></item><item><title>Heap 3</title><link>/ctf/pico/heap3/</link><pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/heap3/</guid><description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define FLAGSIZE_MAX 64 // Create struct typedef struct { char a[10]; char b[10]; char c[10]; char flag[5]; } object; int num_allocs; object *x; void check_win() { if(!</description></item></channel></rss>