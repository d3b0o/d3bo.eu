<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Buffer Overflow on d3bo</title><link>/tags/buffer-overflow/</link><description>Recent content in Buffer Overflow on d3bo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2025 Hyas</copyright><lastBuildDate>Thu, 21 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/buffer-overflow/index.xml" rel="self" type="application/rss+xml"/><item><title>write4</title><link>/ctf/rop-emporium/write4/</link><pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/rop-emporium/write4/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./write4&amp;#34;) libc = ELF(&amp;#34;./libwrite4.so&amp;#34;) context.binary = exe context.terminal = [&amp;#39;tmux&amp;#39;, &amp;#39;splitw&amp;#39;, &amp;#39;-h&amp;#39;] gdb_script = &amp;#34;&amp;#34;&amp;#34; b main b *0x0000000000400691 b *0x0000000000400629 continue &amp;#34;&amp;#34;&amp;#34; def conn(): if args.</description></item><item><title>split</title><link>/ctf/rop-emporium/split/</link><pubDate>Wed, 20 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/rop-emporium/split/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./split_patched&amp;#34;) context.binary = exe def conn(): if args.LOCAL: r = process([exe.path]) if args.</description></item><item><title>ret2win</title><link>/ctf/rop-emporium/ret2win/</link><pubDate>Tue, 19 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/rop-emporium/ret2win/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./ret2win_patched&amp;#34;) context.binary = exe def conn(): if args.LOCAL: r = process([exe.path]) if args.</description></item><item><title>Old Memes Never Die</title><link>/ctf/why/callme/</link><pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/why/callme/</guid><description>CODE /* Old Memes Never Die * compile without protection, because protection is for Tonies! * gcc -m32 -fno-stack-protector -o old-memes old-memes.</description></item><item><title>callme</title><link>/ctf/rop-emporium/callme/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/rop-emporium/callme/</guid><description>{ setvbuf(_bss_start, 0LL, 2, 0LL); puts(&amp;#34;callme by ROP Emporium&amp;#34;); puts(&amp;#34;x86_64\n&amp;#34;); pwnme(); puts(&amp;#34;\nExiting&amp;#34;); return 0; } La función main llama a la función pwnme().</description></item><item><title>badchars</title><link>/ctf/rop-emporium/badchars/</link><pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/rop-emporium/badchars/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./badchars&amp;#34;) context.binary = exe context.terminal = [&amp;#34;alacritty&amp;#34;, &amp;#34;-e&amp;#34;] gdb_script = &amp;#34;&amp;#34;&amp;#34; b main b *0x000000000040069c continue &amp;#34;&amp;#34;&amp;#34; def conn(): if args.</description></item><item><title>Guessing Game 2</title><link>/ctf/pico/guessing-game-2/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/guessing-game-2/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./vuln_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#39;tmux&amp;#39;, &amp;#39;splitw&amp;#39;, &amp;#39;-h&amp;#39;] gdb_script = &amp;#39;&amp;#39;&amp;#39; b main b *0x080487ce continue &amp;#39;&amp;#39;&amp;#39; def conn(): if args.</description></item><item><title>Guessing Game 1</title><link>/ctf/pico/guessing-game-1/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/guessing-game-1/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./vuln_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#39;tmux&amp;#39;, &amp;#39;splitw&amp;#39;, &amp;#39;-h&amp;#39;] gdb_script = &amp;#39;&amp;#39;&amp;#39; b main b *0x00000000004163f4 b *0x000000000047ff91 b *0x0000000000400c6c continue &amp;#39;&amp;#39;&amp;#39; def conn(): if args.</description></item><item><title>Affirmation Bot</title><link>/ctf/wwctf/affirmationbot/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/wwctf/affirmationbot/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./affirmationbot_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#34;alacritty&amp;#34;, &amp;#34;-e&amp;#34;] gdb_script = &amp;#34;&amp;#34;&amp;#34; b main b affirm c &amp;#34;&amp;#34;&amp;#34; def conn(): if args.</description></item><item><title>bofbof</title><link>/ctf/fcsc/2021/bofbof/</link><pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/fcsc/2021/bofbof/</guid><description>Para este reto se proporciona un binario
undefined8 main(void) { char local_38 [40]; long local_10; local_10 = 0x4141414141414141; printf(&amp;#34;Comment est votre blanquette ?</description></item></channel></rss>