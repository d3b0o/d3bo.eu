<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Buffer Overflow on d3bo</title><link>/tags/buffer-overflow/</link><description>Recent content in Buffer Overflow on d3bo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2025 Hyas</copyright><lastBuildDate>Fri, 01 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/buffer-overflow/index.xml" rel="self" type="application/rss+xml"/><item><title>Guessing Game 2</title><link>/ctf/pico/guessing-game-2/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/guessing-game-2/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./vuln_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#39;tmux&amp;#39;, &amp;#39;splitw&amp;#39;, &amp;#39;-h&amp;#39;] gdb_script = &amp;#39;&amp;#39;&amp;#39; b main b *0x080487ce continue &amp;#39;&amp;#39;&amp;#39; def conn(): if args.</description></item><item><title>Guessing Game 1</title><link>/ctf/pico/guessing-game-1/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/guessing-game-1/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./vuln_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#39;tmux&amp;#39;, &amp;#39;splitw&amp;#39;, &amp;#39;-h&amp;#39;] gdb_script = &amp;#39;&amp;#39;&amp;#39; b main b *0x00000000004163f4 b *0x000000000047ff91 b *0x0000000000400c6c continue &amp;#39;&amp;#39;&amp;#39; def conn(): if args.</description></item><item><title>Affirmation Bot</title><link>/ctf/wwctf/affirmationbot/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/wwctf/affirmationbot/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./affirmationbot_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#34;alacritty&amp;#34;, &amp;#34;-e&amp;#34;] gdb_script = &amp;#34;&amp;#34;&amp;#34; b main b affirm c &amp;#34;&amp;#34;&amp;#34; def conn(): if args.</description></item><item><title>bofbof</title><link>/ctf/fcsc/2021/bofbof/</link><pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/fcsc/2021/bofbof/</guid><description>Para este reto se proporciona un binario
undefined8 main(void) { char local_38 [40]; long local_10; local_10 = 0x4141414141414141; printf(&amp;#34;Comment est votre blanquette ?</description></item><item><title>Reto 07</title><link>/ctf/caixa-bank-tech/2025/202507/</link><pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/caixa-bank-tech/2025/202507/</guid><description>Para el reto se proporciona un binario
int __fastcall main(int argc, const char **argv, const char **envp) { double v3; // xmm0_8 char nptr[8]; // [rsp+0h] [rbp-70h] BYREF __int64 v6; // [rsp+8h] [rbp-68h] __int64 v7; // [rsp+10h] [rbp-60h] __int64 v8; // [rsp+18h] [rbp-58h] __int64 v9; // [rsp+20h] [rbp-50h] __int64 v10; // [rsp+28h] [rbp-48h] __int64 v11; // [rsp+30h] [rbp-40h] __int64 v12; // [rsp+38h] [rbp-38h] double v13; // [rsp+48h] [rbp-28h] unsigned int v14; // [rsp+54h] [rbp-1Ch] double v15; // [rsp+58h] [rbp-18h] double v16; // [rsp+60h] [rbp-10h] unsigned int v17; // [rsp+6Ch] [rbp-4h] *(_QWORD *)nptr = 0LL; v6 = 0LL; v7 = 0LL; v8 = 0LL; v9 = 0LL; v10 = 0LL; v11 = 0LL; v12 = 0LL; v17 = 0; v16 = 0.</description></item><item><title>babyrop</title><link>/ctf/no-hack-no-ctf/babyrop01/</link><pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/no-hack-no-ctf/babyrop01/</guid><description>Analysis Main function bool main(EVP_PKEY_CTX *param_1) { bool bVar1; undefined8 local_38; undefined8 local_30; undefined8 local_28; undefined8 local_20; int local_c; init(param_1); local_38 = 0; local_30 = 0; local_28 = 0; local_20 = 0; puts(&amp;#34;What\&amp;#39;s your name?</description></item><item><title>Restaurant</title><link>/ctf/htb-ctf/restaurant/</link><pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate><guid>/ctf/htb-ctf/restaurant/</guid><description>leak libc &amp;amp; ret2libc</description></item></channel></rss>