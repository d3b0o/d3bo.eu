<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PIE on d3bo</title><link>/tags/pie/</link><description>Recent content in PIE on d3bo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2025 Hyas</copyright><lastBuildDate>Wed, 06 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/pie/index.xml" rel="self" type="application/rss+xml"/><item><title>PIE TIME 2</title><link>/ctf/pico/pietime2/</link><pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/pietime2/</guid><description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;signal.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; void segfault_handler() { printf(&amp;#34;Segfault Occurred, incorrect address.\n&amp;#34;); exit(0); } void call_functions() { char buffer[64]; printf(&amp;#34;Enter your name:&amp;#34;); fgets(buffer, 64, stdin); printf(buffer); unsigned long val; printf(&amp;#34; enter the address to jump to, ex =&amp;gt; 0x12345: &amp;#34;); scanf(&amp;#34;%lx&amp;#34;, &amp;amp;val); void (*foo)(void) = (void (*)())val; foo(); } int win() { FILE *fptr; char c; printf(&amp;#34;You won!</description></item><item><title>PIE TIME</title><link>/ctf/pico/pietime/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>/ctf/pico/pietime/</guid><description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;signal.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; void segfault_handler() { printf(&amp;#34;Segfault Occurred, incorrect address.\n&amp;#34;); exit(0); } int win() { FILE *fptr; char c; printf(&amp;#34;You won!</description></item><item><title>Affirmation Bot</title><link>/ctf/wwctf/affirmationbot/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>/ctf/wwctf/affirmationbot/</guid><description>#!/usr/bin/env python3 from pwn import * exe = ELF(&amp;#34;./affirmationbot_patched&amp;#34;) context.binary = exe context.terminal = [&amp;#34;alacritty&amp;#34;, &amp;#34;-e&amp;#34;] gdb_script = &amp;#34;&amp;#34;&amp;#34; b main b affirm c &amp;#34;&amp;#34;&amp;#34; def conn(): if args.</description></item></channel></rss>